/* Grids.less */
#grid {
    #columns(@width, @gutter) {
        background-image: -webkit-linear-gradient(0, transparent @width, rgba(0, 0, 0, 0.07) @width);
        background-image:    -moz-linear-gradient(0, transparent @width, rgba(0, 0, 0, 0.07) @width);
        background-image:     -ms-linear-gradient(0, transparent @width, rgba(0, 0, 0, 0.07) @width);
        background-image:      -o-linear-gradient(0, transparent @width, rgba(0, 0, 0, 0.07) @width);
        background-image:         linear-gradient(0, transparent @width, rgba(0, 0, 0, 0.07) @width);
        background-position: @gutter / 2 0px;
        background-size: @width + @gutter;
    }

    #container(@width) {
        margin: 0 auto;
        width: @width;
        zoom: 1;

         &:before
        ,&:after {
            clear: both;
            content: '.';
            display: block;
            overflow: hidden;
            visibility: hidden;
            font-size: 0;
            line-height: 0;
            width: 0;
            height: 0;
        }
    }

    #grid(@grid, @gutter, @width, @cols, @float: left, @display: inline) {
        .mixin()  when (@grid <  @cols) {display: none;}
        .mixin()  when (@grid >= @cols) {
            display: @display;
            float: @float;
            margin: 0 @gutter / 2;
            position: relative;
            width: (@width / @grid * @cols) - @gutter;
        }
        .mixin();
    }

    #prefix(@grid, @gutter, @width, @cols) {
        .mixin()  when (@grid <  @cols) {display: none;}
        .mixin()  when (@grid >= @cols) {
            padding-left: (@width / @grid * @cols);
        }
        .mixin();
    }

    #pull(@grid, @gutter, @width, @cols) {
        .mixin()  when (@grid < @cols) {display: none;}
        .mixin()  when (@grid >= @cols) {
            position: relative;
            left: -(@width / @grid * @cols);
        }
        .mixin();
    }

    #push(@grid, @gutter, @width, @cols) {
        .mixin()  when (@grid <  @cols) {display: none;}
        .mixin()  when (@grid >= @cols) {
            position: relative;
            left: (@width / @grid * @cols);
        }
        .mixin();
    }
    
    #suffix(@grid, @gutter, @width, @cols) {
        .mixin()  when (@grid <  @cols) {display: none;}
        .mixin()  when (@grid >= @cols) {
            padding-right: (@width / @grid * @cols);
        }
        .mixin();
    }

    #system(@grid, @gutter, @width) {
        #container(@width);

        &.show_columns {
            #columns(@width / @grid - @gutter, @gutter);
        }

        @display: inline;
        @float: left;

        .grid_1  { #grid(@grid, @gutter, @width,  1, @float, @display); }
        .grid_2  { #grid(@grid, @gutter, @width,  2, @float, @display); }
        .grid_3  { #grid(@grid, @gutter, @width,  3, @float, @display); }
        .grid_4  { #grid(@grid, @gutter, @width,  4, @float, @display); }
        .grid_5  { #grid(@grid, @gutter, @width,  5, @float, @display); }
        .grid_6  { #grid(@grid, @gutter, @width,  6, @float, @display); }
        .grid_7  { #grid(@grid, @gutter, @width,  7, @float, @display); }
        .grid_8  { #grid(@grid, @gutter, @width,  8, @float, @display); }
        .grid_9  { #grid(@grid, @gutter, @width,  9, @float, @display); }
        .grid_10 { #grid(@grid, @gutter, @width, 10, @float, @display); }
        .grid_11 { #grid(@grid, @gutter, @width, 11, @float, @display); }
        .grid_12 { #grid(@grid, @gutter, @width, 12, @float, @display); }
        .grid_13 { #grid(@grid, @gutter, @width, 13, @float, @display); }
        .grid_14 { #grid(@grid, @gutter, @width, 14, @float, @display); }
        .grid_15 { #grid(@grid, @gutter, @width, 15, @float, @display); }
        .grid_16 { #grid(@grid, @gutter, @width, 16, @float, @display); }
        .grid_17 { #grid(@grid, @gutter, @width, 17, @float, @display); }
        .grid_18 { #grid(@grid, @gutter, @width, 18, @float, @display); }
        .grid_19 { #grid(@grid, @gutter, @width, 19, @float, @display); }
        .grid_20 { #grid(@grid, @gutter, @width, 20, @float, @display); }
        .grid_21 { #grid(@grid, @gutter, @width, 21, @float, @display); }
        .grid_22 { #grid(@grid, @gutter, @width, 22, @float, @display); }
        .grid_23 { #grid(@grid, @gutter, @width, 23, @float, @display); }
        .grid_24 { #grid(@grid, @gutter, @width, 24, @float, @display); }

        .prefix_1  { #prefix(@grid, @gutter, @width,  1); }
        .prefix_2  { #prefix(@grid, @gutter, @width,  2); }
        .prefix_3  { #prefix(@grid, @gutter, @width,  3); }
        .prefix_4  { #prefix(@grid, @gutter, @width,  4); }
        .prefix_5  { #prefix(@grid, @gutter, @width,  5); }
        .prefix_6  { #prefix(@grid, @gutter, @width,  6); }
        .prefix_7  { #prefix(@grid, @gutter, @width,  7); }
        .prefix_8  { #prefix(@grid, @gutter, @width,  8); }
        .prefix_9  { #prefix(@grid, @gutter, @width,  9); }
        .prefix_10 { #prefix(@grid, @gutter, @width, 10); }
        .prefix_11 { #prefix(@grid, @gutter, @width, 11); }
        .prefix_12 { #prefix(@grid, @gutter, @width, 12); }
        .prefix_13 { #prefix(@grid, @gutter, @width, 13); }
        .prefix_14 { #prefix(@grid, @gutter, @width, 14); }
        .prefix_15 { #prefix(@grid, @gutter, @width, 15); }
        .prefix_16 { #prefix(@grid, @gutter, @width, 16); }
        .prefix_17 { #prefix(@grid, @gutter, @width, 17); }
        .prefix_18 { #prefix(@grid, @gutter, @width, 18); }
        .prefix_19 { #prefix(@grid, @gutter, @width, 19); }
        .prefix_20 { #prefix(@grid, @gutter, @width, 20); }
        .prefix_21 { #prefix(@grid, @gutter, @width, 21); }
        .prefix_22 { #prefix(@grid, @gutter, @width, 22); }
        .prefix_23 { #prefix(@grid, @gutter, @width, 23); }
        .prefix_24 { #prefix(@grid, @gutter, @width, 24); }

        .pull_1  { #pull(@grid, @gutter, @width,  1); }
        .pull_2  { #pull(@grid, @gutter, @width,  2); }
        .pull_3  { #pull(@grid, @gutter, @width,  3); }
        .pull_4  { #pull(@grid, @gutter, @width,  4); }
        .pull_5  { #pull(@grid, @gutter, @width,  5); }
        .pull_6  { #pull(@grid, @gutter, @width,  6); }
        .pull_7  { #pull(@grid, @gutter, @width,  7); }
        .pull_8  { #pull(@grid, @gutter, @width,  8); }
        .pull_9  { #pull(@grid, @gutter, @width,  9); }
        .pull_10 { #pull(@grid, @gutter, @width, 10); }
        .pull_11 { #pull(@grid, @gutter, @width, 11); }
        .pull_12 { #pull(@grid, @gutter, @width, 12); }
        .pull_13 { #pull(@grid, @gutter, @width, 13); }
        .pull_14 { #pull(@grid, @gutter, @width, 14); }
        .pull_15 { #pull(@grid, @gutter, @width, 15); }
        .pull_16 { #pull(@grid, @gutter, @width, 16); }
        .pull_17 { #pull(@grid, @gutter, @width, 17); }
        .pull_18 { #pull(@grid, @gutter, @width, 18); }
        .pull_19 { #pull(@grid, @gutter, @width, 19); }
        .pull_20 { #pull(@grid, @gutter, @width, 20); }
        .pull_21 { #pull(@grid, @gutter, @width, 21); }
        .pull_22 { #pull(@grid, @gutter, @width, 22); }
        .pull_23 { #pull(@grid, @gutter, @width, 23); }
        .pull_24 { #pull(@grid, @gutter, @width, 24); }

        .push_1  { #push(@grid, @gutter, @width,  1); }
        .push_2  { #push(@grid, @gutter, @width,  2); }
        .push_3  { #push(@grid, @gutter, @width,  3); }
        .push_4  { #push(@grid, @gutter, @width,  4); }
        .push_5  { #push(@grid, @gutter, @width,  5); }
        .push_6  { #push(@grid, @gutter, @width,  6); }
        .push_7  { #push(@grid, @gutter, @width,  7); }
        .push_8  { #push(@grid, @gutter, @width,  8); }
        .push_9  { #push(@grid, @gutter, @width,  9); }
        .push_10 { #push(@grid, @gutter, @width, 10); }
        .push_11 { #push(@grid, @gutter, @width, 11); }
        .push_12 { #push(@grid, @gutter, @width, 12); }
        .push_13 { #push(@grid, @gutter, @width, 13); }
        .push_14 { #push(@grid, @gutter, @width, 14); }
        .push_15 { #push(@grid, @gutter, @width, 15); }
        .push_16 { #push(@grid, @gutter, @width, 16); }
        .push_17 { #push(@grid, @gutter, @width, 17); }
        .push_18 { #push(@grid, @gutter, @width, 18); }
        .push_19 { #push(@grid, @gutter, @width, 19); }
        .push_20 { #push(@grid, @gutter, @width, 20); }
        .push_21 { #push(@grid, @gutter, @width, 21); }
        .push_22 { #push(@grid, @gutter, @width, 22); }
        .push_23 { #push(@grid, @gutter, @width, 23); }
        .push_24 { #push(@grid, @gutter, @width, 24); }

        .suffix_1  { #suffix(@grid, @gutter, @width,  1); }
        .suffix_2  { #suffix(@grid, @gutter, @width,  2); }
        .suffix_3  { #suffix(@grid, @gutter, @width,  3); }
        .suffix_4  { #suffix(@grid, @gutter, @width,  4); }
        .suffix_5  { #suffix(@grid, @gutter, @width,  5); }
        .suffix_6  { #suffix(@grid, @gutter, @width,  6); }
        .suffix_7  { #suffix(@grid, @gutter, @width,  7); }
        .suffix_8  { #suffix(@grid, @gutter, @width,  8); }
        .suffix_9  { #suffix(@grid, @gutter, @width,  9); }
        .suffix_10 { #suffix(@grid, @gutter, @width, 10); }
        .suffix_11 { #suffix(@grid, @gutter, @width, 11); }
        .suffix_12 { #suffix(@grid, @gutter, @width, 12); }
        .suffix_13 { #suffix(@grid, @gutter, @width, 13); }
        .suffix_14 { #suffix(@grid, @gutter, @width, 14); }
        .suffix_15 { #suffix(@grid, @gutter, @width, 15); }
        .suffix_16 { #suffix(@grid, @gutter, @width, 16); }
        .suffix_17 { #suffix(@grid, @gutter, @width, 17); }
        .suffix_18 { #suffix(@grid, @gutter, @width, 18); }
        .suffix_19 { #suffix(@grid, @gutter, @width, 19); }
        .suffix_20 { #suffix(@grid, @gutter, @width, 20); }
        .suffix_21 { #suffix(@grid, @gutter, @width, 21); }
        .suffix_22 { #suffix(@grid, @gutter, @width, 22); }
        .suffix_23 { #suffix(@grid, @gutter, @width, 23); }
        .suffix_24 { #suffix(@grid, @gutter, @width, 24); }

        .alpha { margin-left:  0; }
        .omega { margin-right: 0; }
    }
}

@standard_gutter    : 20px;
@max_width          : 960px;
@max_less           : @max_width - 1;
@iPhone_portrait    : 300px;
@iPhone_landscape   : 480px;
@iPad_portrait      : 740px;

.container_12 { #grid > #system(12, @standard_gutter, @max_width); }

// used below to redefine container widths
#adjust(@width) {
    body { min-width: @width; }
    .container_12 { width: @width !important; }
}

/* Responsive-ness via media queries */
@media only screen and (min-width: 1px) and (max-width: @max_less) {
    #adjust(@iPhone_portrait);

    // container(s) here need to match above for specificity
    .container_12 {
         .grid_1, .grid_2, .grid_3, .grid_4, .grid_5, .grid_6
        ,.grid_7, .grid_8, .grid_9, .grid_10,.grid_11,.grid_12
        ,.grid_13,.grid_14,.grid_15,.grid_16,.grid_17,.grid_18
        ,.grid_19,.grid_20,.grid_21,.grid_22,.grid_23,.grid_24

        ,.prefix_1, .prefix_2, .prefix_3, .prefix_4, .prefix_5, .prefix_6
        ,.prefix_7, .prefix_8, .prefix_9, .prefix_10,.prefix_11,.prefix_12
        ,.prefix_13,.prefix_14,.prefix_15,.prefix_16,.prefix_17,.prefix_18
        ,.prefix_19,.prefix_20,.prefix_21,.prefix_22,.prefix_23,.prefix_24

        ,.pull_1, .pull_2, .pull_3, .pull_4, .pull_5, .pull_6
        ,.pull_7, .pull_8, .pull_9, .pull_10,.pull_11,.pull_12
        ,.pull_13,.pull_14,.pull_15,.pull_16,.pull_17,.pull_18
        ,.pull_19,.pull_20,.pull_21,.pull_22,.pull_23,.pull_24

        ,.push_1, .push_2, .push_3, .push_4, .push_5, .push_6
        ,.push_7, .push_8, .push_9, .push_10,.push_11,.push_12
        ,.push_13,.push_14,.push_15,.push_16,.push_17,.push_18
        ,.push_19,.push_20,.push_21,.push_22,.push_23,.push_24

        ,.suffix_1, .suffix_2, .suffix_3, .suffix_4, .suffix_5, .suffix_6
        ,.suffix_7, .suffix_8, .suffix_9, .suffix_10,.suffix_11,.suffix_12
        ,.suffix_13,.suffix_14,.suffix_15,.suffix_16,.suffix_17,.suffix_18
        ,.suffix_19,.suffix_20,.suffix_21,.suffix_22,.suffix_23,.suffix_24 {
            display: block;
            float: none;
            left: 0px;
            margin: 0px;
            padding: 0px;
            width: 100%;
        }
    }
}

@media only screen and (min-width: @iPhone_landscape) {
                           #adjust(@iPhone_landscape);}

@media only screen and (min-width: @iPad_portrait) {
                           #adjust(@iPad_portrait);}

@media only screen and (min-width: @max_width) {
                           #adjust(@max_width);}